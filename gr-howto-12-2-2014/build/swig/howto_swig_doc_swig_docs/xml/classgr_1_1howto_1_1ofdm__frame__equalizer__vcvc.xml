<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classgr_1_1howto_1_1ofdm__frame__equalizer__vcvc" kind="class" prot="public">
    <compoundname>gr::howto::ofdm_frame_equalizer_vcvc</compoundname>
    <basecompoundref prot="public" virt="virtual">tagged_stream_block</basecompoundref>
    <includes refid="ofdm__frame__equalizer__vcvc_8h" local="no">ofdm_frame_equalizer_vcvc.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classgr_1_1howto_1_1ofdm__frame__equalizer__vcvc_1a42ad3bd5ce0a566d2e7d47754628d8aa" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classgr_1_1howto_1_1ofdm__frame__equalizer__vcvc" kindref="compound">ofdm_frame_equalizer_vcvc</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;ofdm_frame_equalizer_vcvc&gt; gr::howto::ofdm_frame_equalizer_vcvc::sptr</definition>
        <argsstring></argsstring>
        <name>sptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chk/out-of-tree/gr-howto/include/howto/ofdm_frame_equalizer_vcvc.h" line="58" column="1" bodyfile="/home/chk/out-of-tree/gr-howto/include/howto/ofdm_frame_equalizer_vcvc.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgr_1_1howto_1_1ofdm__frame__equalizer__vcvc_1a79e118688bd2f48d2710aae3d7fcf35d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgr_1_1howto_1_1ofdm__frame__equalizer__vcvc_1a42ad3bd5ce0a566d2e7d47754628d8aa" kindref="member">sptr</ref></type>
        <definition>static sptr gr::howto::ofdm_frame_equalizer_vcvc::make</definition>
        <argsstring>(int fft_len, unsigned device_id, const std::vector&lt; std::vector&lt; int &gt; &gt; &amp;pilot_carriers, const std::vector&lt; std::vector&lt; gr_complex &gt; &gt; &amp;pilot_symbols, int cp_len, const std::string &amp;len_tag_key=&quot;frame_len&quot;, bool propagate_channel_state=false, int fixed_frame_len=0)</argsstring>
        <name>make</name>
        <param>
          <type>int</type>
          <declname>fft_len</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>device_id</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::vector&lt; int &gt; &gt; &amp;</type>
          <declname>pilot_carriers</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::vector&lt; gr_complex &gt; &gt; &amp;</type>
          <declname>pilot_symbols</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cp_len</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>len_tag_key</declname>
          <defval>&quot;frame_len&quot;</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>propagate_channel_state</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>int</type>
          <declname>fixed_frame_len</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>equalizer</parametername>
</parameternamelist>
<parameterdescription>
<para>The equalizer object that will do the actual work </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cp_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the cyclic prefix in samples (required to correct the frequency offset) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len_tag_key</parametername>
</parameternamelist>
<parameterdescription>
<para>Length tag key </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>propagate_channel_state</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, the channel state after the last symbol will be added to the first symbol as a tag </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fixed_frame_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Set if the frame length is fixed throughout, helps with book keeping. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chk/out-of-tree/gr-howto/include/howto/ofdm_frame_equalizer_vcvc.h" line="69" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>OFDM frame equalizer. </para>    </briefdescription>
    <detaileddescription>
<para>Performs equalization in one or two dimensions on a tagged OFDM frame.</para><para>This does two things: First, it removes the coarse carrier offset. If a tag is found on the first item with the key &apos;ofdm_sync_carr_offset&apos;, this is interpreted as the coarse frequency offset in number of carriers. Next, it performs equalization in one or two dimensions on a tagged OFDM frame. The actual equalization is done by a ofdm_frame_equalizer object, outside of the block.</para><para>Note that the tag with the coarse carrier offset is not removed. Blocks downstream from this block must not attempt to also correct this offset.</para><para>Input: a tagged series of OFDM symbols. Output: The same as the input, but equalized and frequency-corrected. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="163">
        <label>tagged_stream_block</label>
      </node>
      <node id="162">
        <label>gr::howto::ofdm_frame_equalizer_vcvc</label>
        <link refid="classgr_1_1howto_1_1ofdm__frame__equalizer__vcvc"/>
        <childnode refid="163" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="165">
        <label>tagged_stream_block</label>
      </node>
      <node id="164">
        <label>gr::howto::ofdm_frame_equalizer_vcvc</label>
        <link refid="classgr_1_1howto_1_1ofdm__frame__equalizer__vcvc"/>
        <childnode refid="165" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/chk/out-of-tree/gr-howto/include/howto/ofdm_frame_equalizer_vcvc.h" line="56" column="1" bodyfile="/home/chk/out-of-tree/gr-howto/include/howto/ofdm_frame_equalizer_vcvc.h" bodystart="55" bodyend="81"/>
    <listofallmembers>
      <member refid="classgr_1_1howto_1_1ofdm__frame__equalizer__vcvc_1a79e118688bd2f48d2710aae3d7fcf35d" prot="public" virt="non-virtual"><scope>gr::howto::ofdm_frame_equalizer_vcvc</scope><name>make</name></member>
      <member refid="classgr_1_1howto_1_1ofdm__frame__equalizer__vcvc_1a42ad3bd5ce0a566d2e7d47754628d8aa" prot="public" virt="non-virtual"><scope>gr::howto::ofdm_frame_equalizer_vcvc</scope><name>sptr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
