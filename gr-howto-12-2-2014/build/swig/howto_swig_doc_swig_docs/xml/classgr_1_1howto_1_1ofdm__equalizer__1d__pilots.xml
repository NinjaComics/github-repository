<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classgr_1_1howto_1_1ofdm__equalizer__1d__pilots" kind="class" prot="public">
    <compoundname>gr::howto::ofdm_equalizer_1d_pilots</compoundname>
    <basecompoundref refid="classgr_1_1howto_1_1ofdm__equalizer__base" prot="public" virt="non-virtual">gr::howto::ofdm_equalizer_base</basecompoundref>
    <derivedcompoundref refid="classgr_1_1howto_1_1ofdm__equalizer__simpledfe" prot="public" virt="non-virtual">gr::howto::ofdm_equalizer_simpledfe</derivedcompoundref>
    <includes refid="ofdm__equalizer__base_8h" local="no">ofdm_equalizer_base.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classgr_1_1howto_1_1ofdm__equalizer__1d__pilots_1a316904641d5dd278a9f63609d70fe29d" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classgr_1_1howto_1_1ofdm__equalizer__1d__pilots" kindref="compound">ofdm_equalizer_1d_pilots</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;ofdm_equalizer_1d_pilots&gt; gr::howto::ofdm_equalizer_1d_pilots::sptr</definition>
        <argsstring></argsstring>
        <name>sptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chk/out-of-tree/gr-howto/include/howto/ofdm_equalizer_base.h" line="90" column="1" bodyfile="/home/chk/out-of-tree/gr-howto/include/howto/ofdm_equalizer_base.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classgr_1_1howto_1_1ofdm__equalizer__1d__pilots_1a494d7f3b836299072e2108d00f12a01c" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt;bool&gt; gr::howto::ofdm_equalizer_1d_pilots::d_occupied_carriers</definition>
        <argsstring></argsstring>
        <name>d_occupied_carriers</name>
        <briefdescription>
<para>If <computeroutput>d_occupied_carriers</computeroutput>[k][l] is true, symbol k, carrier l is carrying data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chk/out-of-tree/gr-howto/include/howto/ofdm_equalizer_base.h" line="75" column="1" bodyfile="/home/chk/out-of-tree/gr-howto/include/howto/ofdm_equalizer_base.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr_1_1howto_1_1ofdm__equalizer__1d__pilots_1a00645e0bfe68f22a2f43f984fce96fcf" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; bool &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;bool&gt; &gt; gr::howto::ofdm_equalizer_1d_pilots::d_pilot_carriers</definition>
        <argsstring></argsstring>
        <name>d_pilot_carriers</name>
        <briefdescription>
<para>If <computeroutput>d_pilot_carriers</computeroutput>[k][l] is true, symbol k, carrier l is carrying data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chk/out-of-tree/gr-howto/include/howto/ofdm_equalizer_base.h" line="78" column="1" bodyfile="/home/chk/out-of-tree/gr-howto/include/howto/ofdm_equalizer_base.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr_1_1howto_1_1ofdm__equalizer__1d__pilots_1aa863f75c885bcb604d4dd644bee11270" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; gr_complex &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;gr_complex&gt; &gt; gr::howto::ofdm_equalizer_1d_pilots::d_pilot_symbols</definition>
        <argsstring></argsstring>
        <name>d_pilot_symbols</name>
        <briefdescription>
<para>If <computeroutput>d_pilot_carriers</computeroutput>[k][l] is true, d_pilot_symbols[k][l] is its tx&apos;d value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chk/out-of-tree/gr-howto/include/howto/ofdm_equalizer_base.h" line="81" column="1" bodyfile="/home/chk/out-of-tree/gr-howto/include/howto/ofdm_equalizer_base.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr_1_1howto_1_1ofdm__equalizer__1d__pilots_1a10795149defff138897611e48eaa3863" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int gr::howto::ofdm_equalizer_1d_pilots::d_symbols_skipped</definition>
        <argsstring></argsstring>
        <name>d_symbols_skipped</name>
        <briefdescription>
<para>In case the frame doesn&apos;t begin with OFDM symbol 0, this is the index of the first symbol. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chk/out-of-tree/gr-howto/include/howto/ofdm_equalizer_base.h" line="83" column="1" bodyfile="/home/chk/out-of-tree/gr-howto/include/howto/ofdm_equalizer_base.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr_1_1howto_1_1ofdm__equalizer__1d__pilots_1a5e5fb5dbc858490273b0bc10585df9c1" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int gr::howto::ofdm_equalizer_1d_pilots::d_pilot_carr_set</definition>
        <argsstring></argsstring>
        <name>d_pilot_carr_set</name>
        <briefdescription>
<para>The current position in the set of pilot symbols. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chk/out-of-tree/gr-howto/include/howto/ofdm_equalizer_base.h" line="85" column="1" bodyfile="/home/chk/out-of-tree/gr-howto/include/howto/ofdm_equalizer_base.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr_1_1howto_1_1ofdm__equalizer__1d__pilots_1a22107f428afd5ad2aeaad7eb6d500897" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; gr_complex &gt;</type>
        <definition>std::vector&lt;gr_complex&gt; gr::howto::ofdm_equalizer_1d_pilots::d_channel_state</definition>
        <argsstring></argsstring>
        <name>d_channel_state</name>
        <briefdescription>
<para>Vector of length d_fft_len saving the current channel state (on the occupied carriers) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chk/out-of-tree/gr-howto/include/howto/ofdm_equalizer_base.h" line="87" column="1" bodyfile="/home/chk/out-of-tree/gr-howto/include/howto/ofdm_equalizer_base.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgr_1_1howto_1_1ofdm__equalizer__1d__pilots_1a9c9fca937695101b8d0e09d6370e746e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gr::howto::ofdm_equalizer_1d_pilots::ofdm_equalizer_1d_pilots</definition>
        <argsstring>(int fft_len, const std::vector&lt; std::vector&lt; int &gt; &gt; &amp;occupied_carriers, const std::vector&lt; std::vector&lt; int &gt; &gt; &amp;pilot_carriers, const std::vector&lt; std::vector&lt; gr_complex &gt; &gt; &amp;pilot_symbols, int symbols_skipped, bool input_is_shifted)</argsstring>
        <name>ofdm_equalizer_1d_pilots</name>
        <param>
          <type>int</type>
          <declname>fft_len</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::vector&lt; int &gt; &gt; &amp;</type>
          <declname>occupied_carriers</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::vector&lt; int &gt; &gt; &amp;</type>
          <declname>pilot_carriers</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::vector&lt; gr_complex &gt; &gt; &amp;</type>
          <declname>pilot_symbols</declname>
        </param>
        <param>
          <type>int</type>
          <declname>symbols_skipped</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>input_is_shifted</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chk/out-of-tree/gr-howto/include/howto/ofdm_equalizer_base.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1howto_1_1ofdm__equalizer__1d__pilots_1a8c75f9f1c71ddbb09f3e286096ffeed0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gr::howto::ofdm_equalizer_1d_pilots::~ofdm_equalizer_1d_pilots</definition>
        <argsstring>()</argsstring>
        <name>~ofdm_equalizer_1d_pilots</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chk/out-of-tree/gr-howto/include/howto/ofdm_equalizer_base.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1howto_1_1ofdm__equalizer__1d__pilots_1aac616c168449c33014582cea15103142" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void gr::howto::ofdm_equalizer_1d_pilots::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <reimplements refid="classgr_1_1howto_1_1ofdm__equalizer__base_1a3cc2713ffd570ba81438867d26ba6917">reset</reimplements>
        <briefdescription>
<para>Reset the channel information state knowledge. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chk/out-of-tree/gr-howto/include/howto/ofdm_equalizer_base.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1howto_1_1ofdm__equalizer__1d__pilots_1a1a2cfd40363d26af75ff871fc02d4974" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void gr::howto::ofdm_equalizer_1d_pilots::get_channel_state</definition>
        <argsstring>(std::vector&lt; gr_complex &gt; &amp;taps)</argsstring>
        <name>get_channel_state</name>
        <reimplements refid="classgr_1_1howto_1_1ofdm__equalizer__base_1a41a15bdc105042136cfc171ddb847b01">get_channel_state</reimplements>
        <param>
          <type>std::vector&lt; gr_complex &gt; &amp;</type>
          <declname>taps</declname>
        </param>
        <briefdescription>
<para>Return the current channel state. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chk/out-of-tree/gr-howto/include/howto/ofdm_equalizer_base.h" line="102" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="135">
        <label>boost::enable_shared_from_this&lt; ofdm_equalizer_base &gt;</label>
      </node>
      <node id="133">
        <label>gr::howto::ofdm_equalizer_1d_pilots</label>
        <link refid="classgr_1_1howto_1_1ofdm__equalizer__1d__pilots"/>
        <childnode refid="134" relation="public-inheritance">
        </childnode>
      </node>
      <node id="136">
        <label>gr::howto::ofdm_equalizer_simpledfe</label>
        <link refid="classgr_1_1howto_1_1ofdm__equalizer__simpledfe"/>
        <childnode refid="133" relation="public-inheritance">
        </childnode>
      </node>
      <node id="134">
        <label>gr::howto::ofdm_equalizer_base</label>
        <link refid="classgr_1_1howto_1_1ofdm__equalizer__base"/>
        <childnode refid="135" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="139">
        <label>boost::enable_shared_from_this&lt; ofdm_equalizer_base &gt;</label>
      </node>
      <node id="137">
        <label>gr::howto::ofdm_equalizer_1d_pilots</label>
        <link refid="classgr_1_1howto_1_1ofdm__equalizer__1d__pilots"/>
        <childnode refid="138" relation="public-inheritance">
        </childnode>
        <childnode refid="140" relation="usage">
          <edgelabel>d_pilot_carriers</edgelabel>
        </childnode>
        <childnode refid="141" relation="usage">
          <edgelabel>d_occupied_carriers</edgelabel>
        </childnode>
        <childnode refid="142" relation="usage">
          <edgelabel>d_channel_state</edgelabel>
        </childnode>
        <childnode refid="143" relation="usage">
          <edgelabel>d_pilot_symbols</edgelabel>
        </childnode>
      </node>
      <node id="142">
        <label>std::vector&lt; gr_complex &gt;</label>
      </node>
      <node id="141">
        <label>std::vector&lt; bool &gt;</label>
      </node>
      <node id="138">
        <label>gr::howto::ofdm_equalizer_base</label>
        <link refid="classgr_1_1howto_1_1ofdm__equalizer__base"/>
        <childnode refid="139" relation="public-inheritance">
        </childnode>
      </node>
      <node id="140">
        <label>std::vector&lt; std::vector&lt; bool &gt; &gt;</label>
        <childnode refid="141" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="143">
        <label>std::vector&lt; std::vector&lt; gr_complex &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/chk/out-of-tree/gr-howto/include/howto/ofdm_equalizer_base.h" line="71" column="1" bodyfile="/home/chk/out-of-tree/gr-howto/include/howto/ofdm_equalizer_base.h" bodystart="70" bodyend="103"/>
    <listofallmembers>
      <member refid="classgr_1_1howto_1_1ofdm__equalizer__base_1af9581f7c065249cc2c79e25dbcba89fb" prot="public" virt="non-virtual"><scope>gr::howto::ofdm_equalizer_1d_pilots</scope><name>base</name></member>
      <member refid="classgr_1_1howto_1_1ofdm__equalizer__1d__pilots_1a22107f428afd5ad2aeaad7eb6d500897" prot="protected" virt="non-virtual"><scope>gr::howto::ofdm_equalizer_1d_pilots</scope><name>d_channel_state</name></member>
      <member refid="classgr_1_1howto_1_1ofdm__equalizer__base_1a63d33d505056c96d902a79754f34802a" prot="protected" virt="non-virtual"><scope>gr::howto::ofdm_equalizer_1d_pilots</scope><name>d_fft_len</name></member>
      <member refid="classgr_1_1howto_1_1ofdm__equalizer__1d__pilots_1a494d7f3b836299072e2108d00f12a01c" prot="protected" virt="non-virtual"><scope>gr::howto::ofdm_equalizer_1d_pilots</scope><name>d_occupied_carriers</name></member>
      <member refid="classgr_1_1howto_1_1ofdm__equalizer__1d__pilots_1a5e5fb5dbc858490273b0bc10585df9c1" prot="protected" virt="non-virtual"><scope>gr::howto::ofdm_equalizer_1d_pilots</scope><name>d_pilot_carr_set</name></member>
      <member refid="classgr_1_1howto_1_1ofdm__equalizer__1d__pilots_1a00645e0bfe68f22a2f43f984fce96fcf" prot="protected" virt="non-virtual"><scope>gr::howto::ofdm_equalizer_1d_pilots</scope><name>d_pilot_carriers</name></member>
      <member refid="classgr_1_1howto_1_1ofdm__equalizer__1d__pilots_1aa863f75c885bcb604d4dd644bee11270" prot="protected" virt="non-virtual"><scope>gr::howto::ofdm_equalizer_1d_pilots</scope><name>d_pilot_symbols</name></member>
      <member refid="classgr_1_1howto_1_1ofdm__equalizer__1d__pilots_1a10795149defff138897611e48eaa3863" prot="protected" virt="non-virtual"><scope>gr::howto::ofdm_equalizer_1d_pilots</scope><name>d_symbols_skipped</name></member>
      <member refid="classgr_1_1howto_1_1ofdm__equalizer__base_1a50aad1da4c51e75e787b0bc8110eebfe" prot="public" virt="pure-virtual"><scope>gr::howto::ofdm_equalizer_1d_pilots</scope><name>equalize</name></member>
      <member refid="classgr_1_1howto_1_1ofdm__equalizer__base_1a789d54f6124930cf7f579fc22e581517" prot="public" virt="non-virtual"><scope>gr::howto::ofdm_equalizer_1d_pilots</scope><name>fft_len</name></member>
      <member refid="classgr_1_1howto_1_1ofdm__equalizer__1d__pilots_1a1a2cfd40363d26af75ff871fc02d4974" prot="public" virt="virtual"><scope>gr::howto::ofdm_equalizer_1d_pilots</scope><name>get_channel_state</name></member>
      <member refid="classgr_1_1howto_1_1ofdm__equalizer__1d__pilots_1a9c9fca937695101b8d0e09d6370e746e" prot="public" virt="non-virtual"><scope>gr::howto::ofdm_equalizer_1d_pilots</scope><name>ofdm_equalizer_1d_pilots</name></member>
      <member refid="classgr_1_1howto_1_1ofdm__equalizer__base_1aa4906315bfb2312336e241600bc070c6" prot="public" virt="non-virtual"><scope>gr::howto::ofdm_equalizer_1d_pilots</scope><name>ofdm_equalizer_base</name></member>
      <member refid="classgr_1_1howto_1_1ofdm__equalizer__1d__pilots_1aac616c168449c33014582cea15103142" prot="public" virt="virtual"><scope>gr::howto::ofdm_equalizer_1d_pilots</scope><name>reset</name></member>
      <member refid="classgr_1_1howto_1_1ofdm__equalizer__1d__pilots_1a316904641d5dd278a9f63609d70fe29d" prot="public" virt="non-virtual"><scope>gr::howto::ofdm_equalizer_1d_pilots</scope><name>sptr</name></member>
      <member refid="classgr_1_1howto_1_1ofdm__equalizer__1d__pilots_1a8c75f9f1c71ddbb09f3e286096ffeed0" prot="public" virt="non-virtual"><scope>gr::howto::ofdm_equalizer_1d_pilots</scope><name>~ofdm_equalizer_1d_pilots</name></member>
      <member refid="classgr_1_1howto_1_1ofdm__equalizer__base_1a2529650807e845972a1afdbe7aa71ca8" prot="public" virt="virtual"><scope>gr::howto::ofdm_equalizer_1d_pilots</scope><name>~ofdm_equalizer_base</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
