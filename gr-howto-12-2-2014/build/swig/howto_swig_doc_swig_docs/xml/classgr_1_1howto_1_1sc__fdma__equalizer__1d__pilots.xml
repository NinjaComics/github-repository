<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots" kind="class" prot="public">
    <compoundname>gr::howto::sc_fdma_equalizer_1d_pilots</compoundname>
    <basecompoundref refid="classgr_1_1howto_1_1sc__fdma__equalizer__base" prot="public" virt="non-virtual">gr::howto::sc_fdma_equalizer_base</basecompoundref>
    <derivedcompoundref refid="classgr_1_1howto_1_1sc__fdma__equalizer__simpledfe" prot="public" virt="non-virtual">gr::howto::sc_fdma_equalizer_simpledfe</derivedcompoundref>
    <includes refid="sc__fdma__equalizer__base_8h" local="no">sc_fdma_equalizer_base.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1ab071525579850282fcb583d8c371985b" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots" kindref="compound">sc_fdma_equalizer_1d_pilots</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;sc_fdma_equalizer_1d_pilots&gt; gr::howto::sc_fdma_equalizer_1d_pilots::sptr</definition>
        <argsstring></argsstring>
        <name>sptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_base.h" line="88" column="1" bodyfile="/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_base.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1a6a02000b654da7ada10b8c1dafbb7220" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt;bool&gt; gr::howto::sc_fdma_equalizer_1d_pilots::d_occupied_carriers</definition>
        <argsstring></argsstring>
        <name>d_occupied_carriers</name>
        <briefdescription>
<para>If <computeroutput>d_occupied_carriers</computeroutput>[k][l] is true, symbol k, carrier l is carrying data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_base.h" line="73" column="1" bodyfile="/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_base.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1ac54b2d42191d9eebb5aaecc3534e4dc0" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; bool &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;bool&gt; &gt; gr::howto::sc_fdma_equalizer_1d_pilots::d_pilot_carriers</definition>
        <argsstring></argsstring>
        <name>d_pilot_carriers</name>
        <briefdescription>
<para>If <computeroutput>d_pilot_carriers</computeroutput>[k][l] is true, symbol k, carrier l is carrying data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_base.h" line="76" column="1" bodyfile="/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_base.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1a9f3e8966702402b97bc45e3b2b7c5bd1" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; gr_complex &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;gr_complex&gt; &gt; gr::howto::sc_fdma_equalizer_1d_pilots::d_pilot_symbols</definition>
        <argsstring></argsstring>
        <name>d_pilot_symbols</name>
        <briefdescription>
<para>If <computeroutput>d_pilot_carriers</computeroutput>[k][l] is true, d_pilot_symbols[k][l] is its tx&apos;d value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_base.h" line="79" column="1" bodyfile="/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_base.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1a0b6295010d0efdab5de7e5fbb5a308db" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int gr::howto::sc_fdma_equalizer_1d_pilots::d_symbols_skipped</definition>
        <argsstring></argsstring>
        <name>d_symbols_skipped</name>
        <briefdescription>
<para>In case the frame doesn&apos;t begin with sc_fdma symbol 0, this is the index of the first symbol. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_base.h" line="81" column="1" bodyfile="/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_base.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1a0f4cc5d24a16aa3ca88a1a7d93602b45" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int gr::howto::sc_fdma_equalizer_1d_pilots::d_pilot_carr_set</definition>
        <argsstring></argsstring>
        <name>d_pilot_carr_set</name>
        <briefdescription>
<para>The current position in the set of pilot symbols. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_base.h" line="83" column="1" bodyfile="/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_base.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1aaed9f36aea2621b92f4a48590d7c08f0" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; gr_complex &gt;</type>
        <definition>std::vector&lt;gr_complex&gt; gr::howto::sc_fdma_equalizer_1d_pilots::d_channel_state</definition>
        <argsstring></argsstring>
        <name>d_channel_state</name>
        <briefdescription>
<para>Vector of length d_fft_len saving the current channel state (on the occupied carriers) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_base.h" line="85" column="1" bodyfile="/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_base.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1a94f7b6bd06b6899b5db97a1b89ca1aee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gr::howto::sc_fdma_equalizer_1d_pilots::sc_fdma_equalizer_1d_pilots</definition>
        <argsstring>(int fft_len, const std::vector&lt; std::vector&lt; int &gt; &gt; &amp;occupied_carriers, const std::vector&lt; std::vector&lt; int &gt; &gt; &amp;pilot_carriers, const std::vector&lt; std::vector&lt; gr_complex &gt; &gt; &amp;pilot_symbols, int symbols_skipped, bool input_is_shifted)</argsstring>
        <name>sc_fdma_equalizer_1d_pilots</name>
        <param>
          <type>int</type>
          <declname>fft_len</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::vector&lt; int &gt; &gt; &amp;</type>
          <declname>occupied_carriers</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::vector&lt; int &gt; &gt; &amp;</type>
          <declname>pilot_carriers</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::vector&lt; gr_complex &gt; &gt; &amp;</type>
          <declname>pilot_symbols</declname>
        </param>
        <param>
          <type>int</type>
          <declname>symbols_skipped</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>input_is_shifted</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_base.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1a894a268b524662d798c7b2f2cfaa5e5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gr::howto::sc_fdma_equalizer_1d_pilots::~sc_fdma_equalizer_1d_pilots</definition>
        <argsstring>()</argsstring>
        <name>~sc_fdma_equalizer_1d_pilots</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_base.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1a6d17fcf320da01fd8039a1754e598018" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void gr::howto::sc_fdma_equalizer_1d_pilots::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <reimplements refid="classgr_1_1howto_1_1sc__fdma__equalizer__base_1a0797af21b6774ff3096b73be3da7caed">reset</reimplements>
        <briefdescription>
<para>Reset the channel information state knowledge. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_base.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1abb2736208598fe20efa960dc457913a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void gr::howto::sc_fdma_equalizer_1d_pilots::get_channel_state</definition>
        <argsstring>(std::vector&lt; gr_complex &gt; &amp;taps)</argsstring>
        <name>get_channel_state</name>
        <reimplements refid="classgr_1_1howto_1_1sc__fdma__equalizer__base_1aca6f096927b2d1dbea7dd85aece95bd8">get_channel_state</reimplements>
        <param>
          <type>std::vector&lt; gr_complex &gt; &amp;</type>
          <declname>taps</declname>
        </param>
        <briefdescription>
<para>Return the current channel state. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_base.h" line="100" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="194">
        <label>gr::howto::sc_fdma_equalizer_simpledfe</label>
        <link refid="classgr_1_1howto_1_1sc__fdma__equalizer__simpledfe"/>
        <childnode refid="191" relation="public-inheritance">
        </childnode>
      </node>
      <node id="193">
        <label>boost::enable_shared_from_this&lt; sc_fdma_equalizer_base &gt;</label>
      </node>
      <node id="192">
        <label>gr::howto::sc_fdma_equalizer_base</label>
        <link refid="classgr_1_1howto_1_1sc__fdma__equalizer__base"/>
        <childnode refid="193" relation="public-inheritance">
        </childnode>
      </node>
      <node id="191">
        <label>gr::howto::sc_fdma_equalizer_1d_pilots</label>
        <link refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots"/>
        <childnode refid="192" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="197">
        <label>boost::enable_shared_from_this&lt; sc_fdma_equalizer_base &gt;</label>
      </node>
      <node id="200">
        <label>std::vector&lt; gr_complex &gt;</label>
      </node>
      <node id="196">
        <label>gr::howto::sc_fdma_equalizer_base</label>
        <link refid="classgr_1_1howto_1_1sc__fdma__equalizer__base"/>
        <childnode refid="197" relation="public-inheritance">
        </childnode>
      </node>
      <node id="195">
        <label>gr::howto::sc_fdma_equalizer_1d_pilots</label>
        <link refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots"/>
        <childnode refid="196" relation="public-inheritance">
        </childnode>
        <childnode refid="198" relation="usage">
          <edgelabel>d_pilot_carriers</edgelabel>
        </childnode>
        <childnode refid="199" relation="usage">
          <edgelabel>d_occupied_carriers</edgelabel>
        </childnode>
        <childnode refid="200" relation="usage">
          <edgelabel>d_channel_state</edgelabel>
        </childnode>
        <childnode refid="201" relation="usage">
          <edgelabel>d_pilot_symbols</edgelabel>
        </childnode>
      </node>
      <node id="199">
        <label>std::vector&lt; bool &gt;</label>
      </node>
      <node id="198">
        <label>std::vector&lt; std::vector&lt; bool &gt; &gt;</label>
        <childnode refid="199" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="201">
        <label>std::vector&lt; std::vector&lt; gr_complex &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_base.h" line="69" column="1" bodyfile="/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_base.h" bodystart="68" bodyend="101"/>
    <listofallmembers>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__base_1a55ed41ba33ec0cf237c2f83bee4b482d" prot="public" virt="non-virtual"><scope>gr::howto::sc_fdma_equalizer_1d_pilots</scope><name>base</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1aaed9f36aea2621b92f4a48590d7c08f0" prot="protected" virt="non-virtual"><scope>gr::howto::sc_fdma_equalizer_1d_pilots</scope><name>d_channel_state</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__base_1a6551cecb6aebe5df7f8a52f23026135b" prot="protected" virt="non-virtual"><scope>gr::howto::sc_fdma_equalizer_1d_pilots</scope><name>d_fft_len</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1a6a02000b654da7ada10b8c1dafbb7220" prot="protected" virt="non-virtual"><scope>gr::howto::sc_fdma_equalizer_1d_pilots</scope><name>d_occupied_carriers</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1a0f4cc5d24a16aa3ca88a1a7d93602b45" prot="protected" virt="non-virtual"><scope>gr::howto::sc_fdma_equalizer_1d_pilots</scope><name>d_pilot_carr_set</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1ac54b2d42191d9eebb5aaecc3534e4dc0" prot="protected" virt="non-virtual"><scope>gr::howto::sc_fdma_equalizer_1d_pilots</scope><name>d_pilot_carriers</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1a9f3e8966702402b97bc45e3b2b7c5bd1" prot="protected" virt="non-virtual"><scope>gr::howto::sc_fdma_equalizer_1d_pilots</scope><name>d_pilot_symbols</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1a0b6295010d0efdab5de7e5fbb5a308db" prot="protected" virt="non-virtual"><scope>gr::howto::sc_fdma_equalizer_1d_pilots</scope><name>d_symbols_skipped</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__base_1af5b8ba2ff78893926b8a63fb66a2f2db" prot="public" virt="pure-virtual"><scope>gr::howto::sc_fdma_equalizer_1d_pilots</scope><name>equalize</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__base_1ab3754ace85683b038f3f5c1d3e102995" prot="public" virt="non-virtual"><scope>gr::howto::sc_fdma_equalizer_1d_pilots</scope><name>fft_len</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1abb2736208598fe20efa960dc457913a5" prot="public" virt="virtual"><scope>gr::howto::sc_fdma_equalizer_1d_pilots</scope><name>get_channel_state</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1a6d17fcf320da01fd8039a1754e598018" prot="public" virt="virtual"><scope>gr::howto::sc_fdma_equalizer_1d_pilots</scope><name>reset</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1a94f7b6bd06b6899b5db97a1b89ca1aee" prot="public" virt="non-virtual"><scope>gr::howto::sc_fdma_equalizer_1d_pilots</scope><name>sc_fdma_equalizer_1d_pilots</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__base_1abe8b5bdafc0d668f497500e6753636d9" prot="public" virt="non-virtual"><scope>gr::howto::sc_fdma_equalizer_1d_pilots</scope><name>sc_fdma_equalizer_base</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1ab071525579850282fcb583d8c371985b" prot="public" virt="non-virtual"><scope>gr::howto::sc_fdma_equalizer_1d_pilots</scope><name>sptr</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1a894a268b524662d798c7b2f2cfaa5e5d" prot="public" virt="non-virtual"><scope>gr::howto::sc_fdma_equalizer_1d_pilots</scope><name>~sc_fdma_equalizer_1d_pilots</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__base_1adbf3d27f5ea330982c6444084010ab56" prot="public" virt="virtual"><scope>gr::howto::sc_fdma_equalizer_1d_pilots</scope><name>~sc_fdma_equalizer_base</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
