<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classgr_1_1howto_1_1sc__fdma__equalizer__simpledfe" kind="class" prot="public">
    <compoundname>gr::howto::sc_fdma_equalizer_simpledfe</compoundname>
    <basecompoundref refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots" prot="public" virt="non-virtual">gr::howto::sc_fdma_equalizer_1d_pilots</basecompoundref>
    <includes refid="sc__fdma__equalizer__simpledfe_8h" local="no">sc_fdma_equalizer_simpledfe.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classgr_1_1howto_1_1sc__fdma__equalizer__simpledfe_1a01a94c35fa9cd5a5bb821da7d76aa1e4" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classgr_1_1howto_1_1sc__fdma__equalizer__simpledfe" kindref="compound">sc_fdma_equalizer_simpledfe</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;sc_fdma_equalizer_simpledfe&gt; gr::howto::sc_fdma_equalizer_simpledfe::sptr</definition>
        <argsstring></argsstring>
        <name>sptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_simpledfe.h" line="66" column="1" bodyfile="/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_simpledfe.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgr_1_1howto_1_1sc__fdma__equalizer__simpledfe_1a6e26022d38c16b6c1fa6d5463001469b" prot="private" static="no" mutable="no">
        <type><ref refid="namespacegr_1_1howto_1a331c6ba45f78fa06f340bef0c6f6205f" kindref="member">gr::howto::constellation_sptr</ref></type>
        <definition>gr::howto::constellation_sptr gr::howto::sc_fdma_equalizer_simpledfe::d_constellation</definition>
        <argsstring></argsstring>
        <name>d_constellation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_simpledfe.h" line="122" column="1" bodyfile="/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_simpledfe.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr_1_1howto_1_1sc__fdma__equalizer__simpledfe_1ac8507d8d43e5256a77e7f07ff8222a75" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float gr::howto::sc_fdma_equalizer_simpledfe::d_alpha</definition>
        <argsstring></argsstring>
        <name>d_alpha</name>
        <briefdescription>
<para>Averaging coefficient. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_simpledfe.h" line="124" column="1" bodyfile="/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_simpledfe.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgr_1_1howto_1_1sc__fdma__equalizer__simpledfe_1adc6ffb790ce1eb1a535065a59de597ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gr::howto::sc_fdma_equalizer_simpledfe::sc_fdma_equalizer_simpledfe</definition>
        <argsstring>(int fft_len, const gr::howto::constellation_sptr &amp;constellation, const std::vector&lt; std::vector&lt; int &gt; &gt; &amp;occupied_carriers=std::vector&lt; std::vector&lt; int &gt; &gt;(), const std::vector&lt; std::vector&lt; int &gt; &gt; &amp;pilot_carriers=std::vector&lt; std::vector&lt; int &gt; &gt;(), const std::vector&lt; std::vector&lt; gr_complex &gt; &gt; &amp;pilot_symbols=std::vector&lt; std::vector&lt; gr_complex &gt; &gt;(), int symbols_skipped=0, float alpha=0.1, bool input_is_shifted=true)</argsstring>
        <name>sc_fdma_equalizer_simpledfe</name>
        <param>
          <type>int</type>
          <declname>fft_len</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegr_1_1howto_1a331c6ba45f78fa06f340bef0c6f6205f" kindref="member">gr::howto::constellation_sptr</ref> &amp;</type>
          <declname>constellation</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::vector&lt; int &gt; &gt; &amp;</type>
          <declname>occupied_carriers</declname>
          <defval>std::vector&lt; std::vector&lt; int &gt; &gt;()</defval>
        </param>
        <param>
          <type>const std::vector&lt; std::vector&lt; int &gt; &gt; &amp;</type>
          <declname>pilot_carriers</declname>
          <defval>std::vector&lt; std::vector&lt; int &gt; &gt;()</defval>
        </param>
        <param>
          <type>const std::vector&lt; std::vector&lt; gr_complex &gt; &gt; &amp;</type>
          <declname>pilot_symbols</declname>
          <defval>std::vector&lt; std::vector&lt; gr_complex &gt; &gt;()</defval>
        </param>
        <param>
          <type>int</type>
          <declname>symbols_skipped</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>float</type>
          <declname>alpha</declname>
          <defval>0.1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>input_is_shifted</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_simpledfe.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1howto_1_1sc__fdma__equalizer__simpledfe_1a5839eb905a924fc468e4575055b61af3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gr::howto::sc_fdma_equalizer_simpledfe::~sc_fdma_equalizer_simpledfe</definition>
        <argsstring>()</argsstring>
        <name>~sc_fdma_equalizer_simpledfe</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_simpledfe.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1howto_1_1sc__fdma__equalizer__simpledfe_1ada6622eef85e66defbab9f3efe537c03" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void gr::howto::sc_fdma_equalizer_simpledfe::equalize</definition>
        <argsstring>(gr_complex *frame, int n_sym, const std::vector&lt; gr_complex &gt; &amp;initial_taps=std::vector&lt; gr_complex &gt;(), const std::vector&lt; tag_t &gt; &amp;tags=std::vector&lt; tag_t &gt;())</argsstring>
        <name>equalize</name>
        <reimplements refid="classgr_1_1howto_1_1sc__fdma__equalizer__base_1af5b8ba2ff78893926b8a63fb66a2f2db">equalize</reimplements>
        <param>
          <type>gr_complex *</type>
          <declname>frame</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_sym</declname>
        </param>
        <param>
          <type>const std::vector&lt; gr_complex &gt; &amp;</type>
          <declname>initial_taps</declname>
          <defval>std::vector&lt; gr_complex &gt;()</defval>
        </param>
        <param>
          <type>const std::vector&lt; tag_t &gt; &amp;</type>
          <declname>tags</declname>
          <defval>std::vector&lt; tag_t &gt;()</defval>
        </param>
        <briefdescription>
<para>Run the actual equalization. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_simpledfe.h" line="80" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgr_1_1howto_1_1sc__fdma__equalizer__simpledfe_1a82aa632da649dfd768e7be23eb1a309f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgr_1_1howto_1_1sc__fdma__equalizer__base_1afb6ab0a110dab41b3e27a1d84dadafec" kindref="member">sptr</ref></type>
        <definition>static sptr gr::howto::sc_fdma_equalizer_simpledfe::make</definition>
        <argsstring>(int fft_len, const gr::howto::constellation_sptr &amp;constellation, const std::vector&lt; std::vector&lt; int &gt; &gt; &amp;occupied_carriers=std::vector&lt; std::vector&lt; int &gt; &gt;(), const std::vector&lt; std::vector&lt; int &gt; &gt; &amp;pilot_carriers=std::vector&lt; std::vector&lt; int &gt; &gt;(), const std::vector&lt; std::vector&lt; gr_complex &gt; &gt; &amp;pilot_symbols=std::vector&lt; std::vector&lt; gr_complex &gt; &gt;(), int symbols_skipped=0, float alpha=0.1, bool input_is_shifted=true)</argsstring>
        <name>make</name>
        <param>
          <type>int</type>
          <declname>fft_len</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegr_1_1howto_1a331c6ba45f78fa06f340bef0c6f6205f" kindref="member">gr::howto::constellation_sptr</ref> &amp;</type>
          <declname>constellation</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::vector&lt; int &gt; &gt; &amp;</type>
          <declname>occupied_carriers</declname>
          <defval>std::vector&lt; std::vector&lt; int &gt; &gt;()</defval>
        </param>
        <param>
          <type>const std::vector&lt; std::vector&lt; int &gt; &gt; &amp;</type>
          <declname>pilot_carriers</declname>
          <defval>std::vector&lt; std::vector&lt; int &gt; &gt;()</defval>
        </param>
        <param>
          <type>const std::vector&lt; std::vector&lt; gr_complex &gt; &gt; &amp;</type>
          <declname>pilot_symbols</declname>
          <defval>std::vector&lt; std::vector&lt; gr_complex &gt; &gt;()</defval>
        </param>
        <param>
          <type>int</type>
          <declname>symbols_skipped</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>float</type>
          <declname>alpha</declname>
          <defval>0.1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>input_is_shifted</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_simpledfe.h" line="110" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="208">
        <label>gr::howto::sc_fdma_equalizer_simpledfe</label>
        <link refid="classgr_1_1howto_1_1sc__fdma__equalizer__simpledfe"/>
        <childnode refid="209" relation="public-inheritance">
        </childnode>
      </node>
      <node id="211">
        <label>boost::enable_shared_from_this&lt; sc_fdma_equalizer_base &gt;</label>
      </node>
      <node id="210">
        <label>gr::howto::sc_fdma_equalizer_base</label>
        <link refid="classgr_1_1howto_1_1sc__fdma__equalizer__base"/>
        <childnode refid="211" relation="public-inheritance">
        </childnode>
      </node>
      <node id="209">
        <label>gr::howto::sc_fdma_equalizer_1d_pilots</label>
        <link refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots"/>
        <childnode refid="210" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="212">
        <label>gr::howto::sc_fdma_equalizer_simpledfe</label>
        <link refid="classgr_1_1howto_1_1sc__fdma__equalizer__simpledfe"/>
        <childnode refid="213" relation="public-inheritance">
        </childnode>
      </node>
      <node id="215">
        <label>boost::enable_shared_from_this&lt; sc_fdma_equalizer_base &gt;</label>
      </node>
      <node id="218">
        <label>std::vector&lt; gr_complex &gt;</label>
      </node>
      <node id="214">
        <label>gr::howto::sc_fdma_equalizer_base</label>
        <link refid="classgr_1_1howto_1_1sc__fdma__equalizer__base"/>
        <childnode refid="215" relation="public-inheritance">
        </childnode>
      </node>
      <node id="213">
        <label>gr::howto::sc_fdma_equalizer_1d_pilots</label>
        <link refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots"/>
        <childnode refid="214" relation="public-inheritance">
        </childnode>
        <childnode refid="216" relation="usage">
          <edgelabel>d_pilot_carriers</edgelabel>
        </childnode>
        <childnode refid="217" relation="usage">
          <edgelabel>d_occupied_carriers</edgelabel>
        </childnode>
        <childnode refid="218" relation="usage">
          <edgelabel>d_channel_state</edgelabel>
        </childnode>
        <childnode refid="219" relation="usage">
          <edgelabel>d_pilot_symbols</edgelabel>
        </childnode>
      </node>
      <node id="217">
        <label>std::vector&lt; bool &gt;</label>
      </node>
      <node id="216">
        <label>std::vector&lt; std::vector&lt; bool &gt; &gt;</label>
        <childnode refid="217" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="219">
        <label>std::vector&lt; std::vector&lt; gr_complex &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_simpledfe.h" line="64" column="1" bodyfile="/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_simpledfe.h" bodystart="63" bodyend="125"/>
    <listofallmembers>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__base_1a55ed41ba33ec0cf237c2f83bee4b482d" prot="public" virt="non-virtual"><scope>gr::howto::sc_fdma_equalizer_simpledfe</scope><name>base</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__simpledfe_1ac8507d8d43e5256a77e7f07ff8222a75" prot="private" virt="non-virtual"><scope>gr::howto::sc_fdma_equalizer_simpledfe</scope><name>d_alpha</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1aaed9f36aea2621b92f4a48590d7c08f0" prot="protected" virt="non-virtual"><scope>gr::howto::sc_fdma_equalizer_simpledfe</scope><name>d_channel_state</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__simpledfe_1a6e26022d38c16b6c1fa6d5463001469b" prot="private" virt="non-virtual"><scope>gr::howto::sc_fdma_equalizer_simpledfe</scope><name>d_constellation</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__base_1a6551cecb6aebe5df7f8a52f23026135b" prot="protected" virt="non-virtual"><scope>gr::howto::sc_fdma_equalizer_simpledfe</scope><name>d_fft_len</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1a6a02000b654da7ada10b8c1dafbb7220" prot="protected" virt="non-virtual"><scope>gr::howto::sc_fdma_equalizer_simpledfe</scope><name>d_occupied_carriers</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1a0f4cc5d24a16aa3ca88a1a7d93602b45" prot="protected" virt="non-virtual"><scope>gr::howto::sc_fdma_equalizer_simpledfe</scope><name>d_pilot_carr_set</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1ac54b2d42191d9eebb5aaecc3534e4dc0" prot="protected" virt="non-virtual"><scope>gr::howto::sc_fdma_equalizer_simpledfe</scope><name>d_pilot_carriers</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1a9f3e8966702402b97bc45e3b2b7c5bd1" prot="protected" virt="non-virtual"><scope>gr::howto::sc_fdma_equalizer_simpledfe</scope><name>d_pilot_symbols</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1a0b6295010d0efdab5de7e5fbb5a308db" prot="protected" virt="non-virtual"><scope>gr::howto::sc_fdma_equalizer_simpledfe</scope><name>d_symbols_skipped</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__simpledfe_1ada6622eef85e66defbab9f3efe537c03" prot="public" virt="virtual"><scope>gr::howto::sc_fdma_equalizer_simpledfe</scope><name>equalize</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__base_1ab3754ace85683b038f3f5c1d3e102995" prot="public" virt="non-virtual"><scope>gr::howto::sc_fdma_equalizer_simpledfe</scope><name>fft_len</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1abb2736208598fe20efa960dc457913a5" prot="public" virt="virtual"><scope>gr::howto::sc_fdma_equalizer_simpledfe</scope><name>get_channel_state</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__simpledfe_1a82aa632da649dfd768e7be23eb1a309f" prot="public" virt="non-virtual"><scope>gr::howto::sc_fdma_equalizer_simpledfe</scope><name>make</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1a6d17fcf320da01fd8039a1754e598018" prot="public" virt="virtual"><scope>gr::howto::sc_fdma_equalizer_simpledfe</scope><name>reset</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1a94f7b6bd06b6899b5db97a1b89ca1aee" prot="public" virt="non-virtual"><scope>gr::howto::sc_fdma_equalizer_simpledfe</scope><name>sc_fdma_equalizer_1d_pilots</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__base_1abe8b5bdafc0d668f497500e6753636d9" prot="public" virt="non-virtual"><scope>gr::howto::sc_fdma_equalizer_simpledfe</scope><name>sc_fdma_equalizer_base</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__simpledfe_1adc6ffb790ce1eb1a535065a59de597ed" prot="public" virt="non-virtual"><scope>gr::howto::sc_fdma_equalizer_simpledfe</scope><name>sc_fdma_equalizer_simpledfe</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__simpledfe_1a01a94c35fa9cd5a5bb821da7d76aa1e4" prot="public" virt="non-virtual"><scope>gr::howto::sc_fdma_equalizer_simpledfe</scope><name>sptr</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1a894a268b524662d798c7b2f2cfaa5e5d" prot="public" virt="non-virtual"><scope>gr::howto::sc_fdma_equalizer_simpledfe</scope><name>~sc_fdma_equalizer_1d_pilots</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__base_1adbf3d27f5ea330982c6444084010ab56" prot="public" virt="virtual"><scope>gr::howto::sc_fdma_equalizer_simpledfe</scope><name>~sc_fdma_equalizer_base</name></member>
      <member refid="classgr_1_1howto_1_1sc__fdma__equalizer__simpledfe_1a5839eb905a924fc468e4575055b61af3" prot="public" virt="non-virtual"><scope>gr::howto::sc_fdma_equalizer_simpledfe</scope><name>~sc_fdma_equalizer_simpledfe</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
