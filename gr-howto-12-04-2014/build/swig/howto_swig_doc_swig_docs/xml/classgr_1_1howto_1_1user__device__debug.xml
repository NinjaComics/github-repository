<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classgr_1_1howto_1_1user__device__debug" kind="class" prot="public">
    <compoundname>gr::howto::user_device_debug</compoundname>
    <basecompoundref prot="public" virt="virtual">sync_block</basecompoundref>
    <includes refid="user__device__debug_8h" local="no">user_device_debug.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classgr_1_1howto_1_1user__device__debug_1aedf8e56dfdae71d15a60cac7daca0873" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classgr_1_1howto_1_1user__device__debug" kindref="compound">user_device_debug</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;user_device_debug&gt; gr::howto::user_device_debug::sptr</definition>
        <argsstring></argsstring>
        <name>sptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chk/out-of-tree/gr-howto/include/howto/user_device_debug.h" line="39" column="1" bodyfile="/home/chk/out-of-tree/gr-howto/include/howto/user_device_debug.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgr_1_1howto_1_1user__device__debug_1a84f037e7a4e699e1a5ae40fa0edf4a61" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgr_1_1howto_1_1user__device__debug_1aedf8e56dfdae71d15a60cac7daca0873" kindref="member">sptr</ref></type>
        <definition>static sptr gr::howto::user_device_debug::make</definition>
        <argsstring>(const std::vector&lt; unsigned char &gt; &amp;data, const unsigned int device_id, const unsigned int packet_len, const std::vector&lt; unsigned char &gt; &amp;request_utb, const std::vector&lt; unsigned char &gt; &amp;acknowledgement_btu, const std::vector&lt; unsigned char &gt; &amp;acknowledgement_utb, const std::vector&lt; unsigned char &gt; &amp;acknowledgement_end_btu, const std::vector&lt; unsigned char &gt; &amp;acknowledgement_end_utb)</argsstring>
        <name>make</name>
        <param>
          <type>const std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>device_id</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>packet_len</declname>
        </param>
        <param>
          <type>const std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>request_utb</declname>
        </param>
        <param>
          <type>const std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>acknowledgement_btu</declname>
        </param>
        <param>
          <type>const std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>acknowledgement_utb</declname>
        </param>
        <param>
          <type>const std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>acknowledgement_end_btu</declname>
        </param>
        <param>
          <type>const std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>acknowledgement_end_utb</declname>
        </param>
        <briefdescription>
<para>Return a shared_ptr to a new instance of <ref refid="classgr_1_1howto_1_1user__device__debug" kindref="compound">howto::user_device_debug</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>To avoid accidental use of raw pointers, <ref refid="classgr_1_1howto_1_1user__device__debug" kindref="compound">howto::user_device_debug</ref>&apos;s constructor is in a private implementation class. <ref refid="classgr_1_1howto_1_1user__device__debug_1a84f037e7a4e699e1a5ae40fa0edf4a61" kindref="member">howto::user_device_debug::make</ref> is the public interface for creating new instances. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chk/out-of-tree/gr-howto/include/howto/user_device_debug.h" line="49" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>&lt;+description of block+&gt; </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="249">
        <label>sync_block</label>
      </node>
      <node id="248">
        <label>gr::howto::user_device_debug</label>
        <link refid="classgr_1_1howto_1_1user__device__debug"/>
        <childnode refid="249" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="251">
        <label>sync_block</label>
      </node>
      <node id="250">
        <label>gr::howto::user_device_debug</label>
        <link refid="classgr_1_1howto_1_1user__device__debug"/>
        <childnode refid="251" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/chk/out-of-tree/gr-howto/include/howto/user_device_debug.h" line="37" column="1" bodyfile="/home/chk/out-of-tree/gr-howto/include/howto/user_device_debug.h" bodystart="36" bodyend="58"/>
    <listofallmembers>
      <member refid="classgr_1_1howto_1_1user__device__debug_1a84f037e7a4e699e1a5ae40fa0edf4a61" prot="public" virt="non-virtual"><scope>gr::howto::user_device_debug</scope><name>make</name></member>
      <member refid="classgr_1_1howto_1_1user__device__debug_1aedf8e56dfdae71d15a60cac7daca0873" prot="public" virt="non-virtual"><scope>gr::howto::user_device_debug</scope><name>sptr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
