<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="sc__fdma__equalizer__base_8h" kind="file">
    <compoundname>sc_fdma_equalizer_base.h</compoundname>
    <includes refid="api_8h" local="no">howto/api.h</includes>
    <includes local="no">gnuradio/tags.h</includes>
    <includes local="no">gnuradio/gr_complex.h</includes>
    <includes local="no">boost/enable_shared_from_this.hpp</includes>
    <includedby refid="sc__fdma__equalizer__simpledfe_8h" local="no">/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_simpledfe.h</includedby>
    <incdepgraph>
      <node id="167">
        <label>gnuradio/tags.h</label>
      </node>
      <node id="166">
        <label>gnuradio/attributes.h</label>
      </node>
      <node id="165">
        <label>howto/api.h</label>
        <link refid="api_8h"/>
        <childnode refid="166" relation="include">
        </childnode>
      </node>
      <node id="168">
        <label>gnuradio/gr_complex.h</label>
      </node>
      <node id="169">
        <label>boost/enable_shared_from_this.hpp</label>
      </node>
      <node id="164">
        <label>/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_base.h</label>
        <link refid="sc_fdma_equalizer_base.h"/>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="172">
        <label>/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_frame_equalizer_vcvc.h</label>
        <link refid="sc__fdma__frame__equalizer__vcvc_8h"/>
      </node>
      <node id="171">
        <label>/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_simpledfe.h</label>
        <link refid="sc__fdma__equalizer__simpledfe_8h"/>
        <childnode refid="172" relation="include">
        </childnode>
      </node>
      <node id="170">
        <label>/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_base.h</label>
        <link refid="sc_fdma_equalizer_base.h"/>
        <childnode refid="171" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classgr_1_1howto_1_1sc__fdma__equalizer__base" prot="public">gr::howto::sc_fdma_equalizer_base</innerclass>
    <innerclass refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots" prot="public">gr::howto::sc_fdma_equalizer_1d_pilots</innerclass>
    <innernamespace refid="namespacegr">gr</innernamespace>
    <innernamespace refid="namespacegr_1_1howto">gr::howto</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c++<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Copyright<sp/>2012<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>GNU<sp/>Radio</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>3,<sp/>or<sp/>(at<sp/>your<sp/>option)</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>GNU<sp/>Radio;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/><sp/>If<sp/>not,<sp/>write<sp/>to</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Boston,<sp/>MA<sp/>02110-1301,<sp/>USA.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INCLUDED_HOWTO_SC_FDMA_EQUALIZER_BASE_H</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>INCLUDED_HOWTO_SC_FDMA_EQUALIZER_BASE_H</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="api_8h" kindref="compound">howto/api.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gnuradio/tags.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gnuradio/gr_complex.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/enable_shared_from_this.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">gr<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">howto<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>\brief<sp/>Base<sp/>class<sp/>for<sp/>implementation<sp/>details<sp/>of<sp/>frequency-domain<sp/>sc_fdma<sp/>equalizers.</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\ingroup<sp/>sc_fdma_blk</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\ingroup<sp/>equalizers_blk</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classgr_1_1howto_1_1sc__fdma__equalizer__base" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="api_8h_1a7a9fda890b8e28fac667cbd66796f13b" kindref="member">HOWTO_API</ref><sp/><ref refid="classgr_1_1howto_1_1sc__fdma__equalizer__base" kindref="compound">sc_fdma_equalizer_base</ref></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>boost::enable_shared_from_this&lt;sc_fdma_equalizer_base&gt;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41" refid="classgr_1_1howto_1_1sc__fdma__equalizer__base_1a6551cecb6aebe5df7f8a52f23026135b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classgr_1_1howto_1_1sc__fdma__equalizer__base_1a6551cecb6aebe5df7f8a52f23026135b" kindref="member">d_fft_len</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44" refid="classgr_1_1howto_1_1sc__fdma__equalizer__base_1afb6ab0a110dab41b3e27a1d84dadafec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;sc_fdma_equalizer_base&gt;<sp/><ref refid="classgr_1_1howto_1_1sc__fdma__equalizer__base_1afb6ab0a110dab41b3e27a1d84dadafec" kindref="member">sptr</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgr_1_1howto_1_1sc__fdma__equalizer__base" kindref="compound">sc_fdma_equalizer_base</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fft_len);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classgr_1_1howto_1_1sc__fdma__equalizer__base" kindref="compound">sc_fdma_equalizer_base</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>equalize(</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gr_complex<sp/>*frame,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_sym,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;gr_complex&gt;<sp/>&amp;initial_taps<sp/>=<sp/>std::vector&lt;gr_complex&gt;(),</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;tag_t&gt;<sp/>&amp;tags<sp/>=<sp/>std::vector&lt;tag_t&gt;())<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get_channel_state(std::vector&lt;gr_complex&gt;<sp/>&amp;taps)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="59" refid="classgr_1_1howto_1_1sc__fdma__equalizer__base_1ab3754ace85683b038f3f5c1d3e102995" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classgr_1_1howto_1_1sc__fdma__equalizer__base_1ab3754ace85683b038f3f5c1d3e102995" kindref="member">fft_len</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_fft_len;<sp/>};</highlight></codeline>
<codeline lineno="60" refid="classgr_1_1howto_1_1sc__fdma__equalizer__base_1a55ed41ba33ec0cf237c2f83bee4b482d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgr_1_1howto_1_1sc__fdma__equalizer__base_1afb6ab0a110dab41b3e27a1d84dadafec" kindref="member">sptr</ref><sp/><ref refid="classgr_1_1howto_1_1sc__fdma__equalizer__base_1a55ed41ba33ec0cf237c2f83bee4b482d" kindref="member">base</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shared_from_this();<sp/>};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>\brief<sp/>Base<sp/>class<sp/>for<sp/>implementation<sp/>details<sp/>of<sp/>1-dimensional<sp/>sc_fdma<sp/>FDEs<sp/>which<sp/>use<sp/>pilot<sp/>tones.</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\ingroup<sp/>digital</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="api_8h_1a7a9fda890b8e28fac667cbd66796f13b" kindref="member">HOWTO_API</ref><sp/><ref refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots" kindref="compound">sc_fdma_equalizer_1d_pilots</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classgr_1_1howto_1_1sc__fdma__equalizer__base" kindref="compound">sc_fdma_equalizer_base</ref></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>(this<sp/>is<sp/>a<sp/>different<sp/>format<sp/>than<sp/>occupied_carriers!)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1a6a02000b654da7ada10b8c1dafbb7220" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;bool&gt;<sp/><ref refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1a6a02000b654da7ada10b8c1dafbb7220" kindref="member">d_occupied_carriers</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>(this<sp/>is<sp/>a<sp/>different<sp/>format<sp/>than<sp/>pilot_carriers!)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1ac54b2d42191d9eebb5aaecc3534e4dc0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;bool&gt;<sp/>&gt;<sp/><ref refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1ac54b2d42191d9eebb5aaecc3534e4dc0" kindref="member">d_pilot_carriers</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>(this<sp/>is<sp/>a<sp/>different<sp/>format<sp/>than<sp/>pilot_symbols!)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1a9f3e8966702402b97bc45e3b2b7c5bd1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;gr_complex&gt;<sp/>&gt;<sp/><ref refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1a9f3e8966702402b97bc45e3b2b7c5bd1" kindref="member">d_pilot_symbols</ref>;</highlight></codeline>
<codeline lineno="81" refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1a0b6295010d0efdab5de7e5fbb5a308db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1a0b6295010d0efdab5de7e5fbb5a308db" kindref="member">d_symbols_skipped</ref>;</highlight></codeline>
<codeline lineno="83" refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1a0f4cc5d24a16aa3ca88a1a7d93602b45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1a0f4cc5d24a16aa3ca88a1a7d93602b45" kindref="member">d_pilot_carr_set</ref>;</highlight></codeline>
<codeline lineno="85" refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1aaed9f36aea2621b92f4a48590d7c08f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;gr_complex&gt;<sp/><ref refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1aaed9f36aea2621b92f4a48590d7c08f0" kindref="member">d_channel_state</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="88" refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1ab071525579850282fcb583d8c371985b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;sc_fdma_equalizer_1d_pilots&gt;<sp/><ref refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots_1ab071525579850282fcb583d8c371985b" kindref="member">sptr</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots" kindref="compound">sc_fdma_equalizer_1d_pilots</ref>(</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fft_len,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::vector&lt;int&gt;<sp/>&gt;<sp/>&amp;occupied_carriers,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::vector&lt;int&gt;<sp/>&gt;<sp/>&amp;pilot_carriers,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::vector&lt;gr_complex&gt;<sp/>&gt;<sp/>&amp;pilot_symbols,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>symbols_skipped,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>input_is_shifted);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>~<ref refid="classgr_1_1howto_1_1sc__fdma__equalizer__1d__pilots" kindref="compound">sc_fdma_equalizer_1d_pilots</ref>();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get_channel_state(std::vector&lt;gr_complex&gt;<sp/>&amp;taps);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>namespace<sp/>HOWTO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>namespace<sp/>gr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>INCLUDED_HOWTO_sc_fdma_EQUALIZER_BASE_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/chk/out-of-tree/gr-howto/include/howto/sc_fdma_equalizer_base.h"/>
  </compounddef>
</doxygen>
